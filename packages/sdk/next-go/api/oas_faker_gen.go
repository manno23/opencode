// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"

	"github.com/go-faster/jx"
)

// SetFake set fake values.
func (s *AgentPart) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Source.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AgentPartInput) SetFake() {
	{
		{
			s.ID.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Source.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AgentPartInputSource) SetFake() {
	{
		{
			s.Value = "string"
		}
	}
	{
		{
			s.Start = int(0)
		}
	}
	{
		{
			s.End = int(0)
		}
	}
}

// SetFake set fake values.
func (s *AgentPartSource) SetFake() {
	{
		{
			s.Value = "string"
		}
	}
	{
		{
			s.Start = int(0)
		}
	}
	{
		{
			s.End = int(0)
		}
	}
}

// SetFake set fake values.
func (s *ApiAuth) SetFake() {
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Key = "string"
		}
	}
}

// SetFake set fake values.
func (s *AppLogReq) SetFake() {
	{
		{
			s.Service = "string"
		}
	}
	{
		{
			s.Level.SetFake()
		}
	}
	{
		{
			s.Message = "string"
		}
	}
	{
		{
			s.Extra.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AppLogReqExtra) SetFake() {
	var (
		elem jx.Raw
		m    map[string]jx.Raw = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *AppLogReqLevel) SetFake() {
	*s = AppLogReqLevelDebug
}

// SetFake set fake values.
func (s *AssistantMessage) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.Role = "string"
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
	{
		{
			s.Error.SetFake()
		}
	}
	{
		{
			s.System = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.System = append(s.System, elem)
			}
		}
	}
	{
		{
			s.ModelID = "string"
		}
	}
	{
		{
			s.ProviderID = "string"
		}
	}
	{
		{
			s.Mode = "string"
		}
	}
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Summary.SetFake()
		}
	}
	{
		{
			s.Cost = float64(0)
		}
	}
	{
		{
			s.Tokens.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AssistantMessageError) SetFake() {
	var variant MessageAbortedError

	{
		variant.SetFake()
	}
	s.SetMessageAbortedError(variant)
}

// SetFake set fake values.
func (s *AssistantMessagePath) SetFake() {
	{
		{
			s.Cwd = "string"
		}
	}
	{
		{
			s.Root = "string"
		}
	}
}

// SetFake set fake values.
func (s *AssistantMessageTime) SetFake() {
	{
		{
			s.Created = float64(0)
		}
	}
	{
		{
			s.Completed.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AssistantMessageTokens) SetFake() {
	{
		{
			s.Input = float64(0)
		}
	}
	{
		{
			s.Output = float64(0)
		}
	}
	{
		{
			s.Reasoning = float64(0)
		}
	}
	{
		{
			s.Cache.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *AssistantMessageTokensCache) SetFake() {
	{
		{
			s.Read = float64(0)
		}
	}
	{
		{
			s.Write = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *Auth) SetFake() {
	var variant ApiAuth

	{
		variant.SetFake()
	}
	s.SetApiAuth(variant)
}

// SetFake set fake values.
func (s *AuthSetOKApplicationJSON) SetFake() {
	var unwrapped bool
	{
		unwrapped = true
	}
	*s = AuthSetOKApplicationJSON(unwrapped)
}

// SetFake set fake values.
func (s *Command) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Agent.SetFake()
		}
	}
	{
		{
			s.Model.SetFake()
		}
	}
	{
		{
			s.Template = "string"
		}
	}
}

// SetFake set fake values.
func (s *ConfigProvidersOK) SetFake() {
	{
		{
			s.Providers = nil
			for i := 0; i < 0; i++ {
				var elem Provider
				{
					elem.SetFake()
				}
				s.Providers = append(s.Providers, elem)
			}
		}
	}
	{
		{
			s.Default.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigProvidersOKDefault) SetFake() {
	var (
		elem string
		m    map[string]string = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *Error) SetFake() {
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ErrorData) SetFake() {
	var (
		elem jx.Raw
		m    map[string]jx.Raw = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *File) SetFake() {
	{
		{
			s.Path = "string"
		}
	}
	{
		{
			s.Added = int(0)
		}
	}
	{
		{
			s.Removed = int(0)
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FileNode) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Path = "string"
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
	{
		{
			s.Ignored = true
		}
	}
}

// SetFake set fake values.
func (s *FileNodeType) SetFake() {
	*s = FileNodeTypeFile
}

// SetFake set fake values.
func (s *FilePart) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Mime = "string"
		}
	}
	{
		{
			s.Filename.SetFake()
		}
	}
	{
		{
			s.URL = "string"
		}
	}
	{
		{
			s.Source.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FilePartInput) SetFake() {
	{
		{
			s.ID.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Mime = "string"
		}
	}
	{
		{
			s.Filename.SetFake()
		}
	}
	{
		{
			s.URL = "string"
		}
	}
	{
		{
			s.Source.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FilePartSource) SetFake() {
	var variant FileSource

	{
		variant.SetFake()
	}
	s.SetFileSource(variant)
}

// SetFake set fake values.
func (s *FilePartSourceText) SetFake() {
	{
		{
			s.Value = "string"
		}
	}
	{
		{
			s.Start = int(0)
		}
	}
	{
		{
			s.End = int(0)
		}
	}
}

// SetFake set fake values.
func (s *FileReadOK) SetFake() {
	{
		{
			s.Type.SetFake()
		}
	}
	{
		{
			s.Content = "string"
		}
	}
}

// SetFake set fake values.
func (s *FileReadOKType) SetFake() {
	*s = FileReadOKTypeRaw
}

// SetFake set fake values.
func (s *FileSource) SetFake() {
	{
		{
			s.Text.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Path = "string"
		}
	}
}

// SetFake set fake values.
func (s *FileStatus) SetFake() {
	*s = FileStatusAdded
}

// SetFake set fake values.
func (s *FindTextOKItem) SetFake() {
	{
		{
			s.Path.SetFake()
		}
	}
	{
		{
			s.Lines.SetFake()
		}
	}
	{
		{
			s.LineNumber = float64(0)
		}
	}
	{
		{
			s.AbsoluteOffset = float64(0)
		}
	}
	{
		{
			s.Submatches = nil
			for i := 0; i < 0; i++ {
				var elem FindTextOKItemSubmatchesItem
				{
					elem.SetFake()
				}
				s.Submatches = append(s.Submatches, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *FindTextOKItemLines) SetFake() {
	{
		{
			s.Text = "string"
		}
	}
}

// SetFake set fake values.
func (s *FindTextOKItemPath) SetFake() {
	{
		{
			s.Text = "string"
		}
	}
}

// SetFake set fake values.
func (s *FindTextOKItemSubmatchesItem) SetFake() {
	{
		{
			s.Match.SetFake()
		}
	}
	{
		{
			s.Start = float64(0)
		}
	}
	{
		{
			s.End = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *FindTextOKItemSubmatchesItemMatch) SetFake() {
	{
		{
			s.Text = "string"
		}
	}
}

// SetFake set fake values.
func (s *Message) SetFake() {
	var variant AssistantMessage

	{
		variant.SetFake()
	}
	s.SetAssistantMessage(variant)
}

// SetFake set fake values.
func (s *MessageAbortedError) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *MessageAbortedErrorData) SetFake() {
}

// SetFake set fake values.
func (s *MessageOutputLengthError) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *MessageOutputLengthErrorData) SetFake() {
}

// SetFake set fake values.
func (s *Model) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.ReleaseDate = "string"
		}
	}
	{
		{
			s.Attachment = true
		}
	}
	{
		{
			s.Reasoning = true
		}
	}
	{
		{
			s.Temperature = true
		}
	}
	{
		{
			s.ToolCall = true
		}
	}
	{
		{
			s.Cost.SetFake()
		}
	}
	{
		{
			s.Limit.SetFake()
		}
	}
	{
		{
			s.Options.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ModelCost) SetFake() {
	{
		{
			s.Input = float64(0)
		}
	}
	{
		{
			s.Output = float64(0)
		}
	}
	{
		{
			s.CacheRead.SetFake()
		}
	}
	{
		{
			s.CacheWrite.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ModelLimit) SetFake() {
	{
		{
			s.Context = float64(0)
		}
	}
	{
		{
			s.Output = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *ModelOptions) SetFake() {
	var (
		elem jx.Raw
		m    map[string]jx.Raw = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *OAuth) SetFake() {
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Refresh = "string"
		}
	}
	{
		{
			s.Access = "string"
		}
	}
	{
		{
			s.Expires = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *OptAgentPartInputSource) SetFake() {
	var elem AgentPartInputSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptAgentPartSource) SetFake() {
	var elem AgentPartSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptAppLogReq) SetFake() {
	var elem AppLogReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptAppLogReqExtra) SetFake() {
	var elem AppLogReqExtra
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptAssistantMessageError) SetFake() {
	var elem AssistantMessageError
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptAuth) SetFake() {
	var elem Auth
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBool) SetFake() {
	var elem bool
	{
		elem = true
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptFilePartSource) SetFake() {
	var elem FilePartSource
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptFloat64) SetFake() {
	var elem float64
	{
		elem = float64(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptPostSessionByIdPermissionsByPermissionIDReq) SetFake() {
	var elem PostSessionByIdPermissionsByPermissionIDReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptReasoningPartMetadata) SetFake() {
	var elem ReasoningPartMetadata
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionCommandReq) SetFake() {
	var elem SessionCommandReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionCreateReq) SetFake() {
	var elem SessionCreateReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionInitReq) SetFake() {
	var elem SessionInitReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionPromptReq) SetFake() {
	var elem SessionPromptReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionPromptReqModel) SetFake() {
	var elem SessionPromptReqModel
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionPromptReqTools) SetFake() {
	var elem SessionPromptReqTools
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionRevert) SetFake() {
	var elem SessionRevert
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionRevertReq) SetFake() {
	var elem SessionRevertReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionShare) SetFake() {
	var elem SessionShare
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionShellReq) SetFake() {
	var elem SessionShellReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionSummarizeReq) SetFake() {
	var elem SessionSummarizeReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSessionUpdateReq) SetFake() {
	var elem SessionUpdateReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptTextPartInputTime) SetFake() {
	var elem TextPartInputTime
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptTextPartTime) SetFake() {
	var elem TextPartTime
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptToolStateErrorMetadata) SetFake() {
	var elem ToolStateErrorMetadata
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptToolStateRunningMetadata) SetFake() {
	var elem ToolStateRunningMetadata
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptTuiAppendPromptReq) SetFake() {
	var elem TuiAppendPromptReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptTuiExecuteCommandReq) SetFake() {
	var elem TuiExecuteCommandReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptTuiShowToastReq) SetFake() {
	var elem TuiShowToastReq
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *Part) SetFake() {
	var variant AgentPart

	{
		variant.SetFake()
	}
	s.SetAgentPart(variant)
}

// SetFake set fake values.
func (s *PatchPart) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Hash = "string"
		}
	}
	{
		{
			s.Files = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Files = append(s.Files, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *Path) SetFake() {
	{
		{
			s.State = "string"
		}
	}
	{
		{
			s.Config = "string"
		}
	}
	{
		{
			s.Worktree = "string"
		}
	}
	{
		{
			s.Directory = "string"
		}
	}
}

// SetFake set fake values.
func (s *PostSessionByIdPermissionsByPermissionIDReq) SetFake() {
	{
		{
			s.Response.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *PostSessionByIdPermissionsByPermissionIDReqResponse) SetFake() {
	*s = PostSessionByIdPermissionsByPermissionIDReqResponseOnce
}

// SetFake set fake values.
func (s *Project) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.Worktree = "string"
		}
	}
	{
		{
			s.Vcs.SetFake()
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ProjectTime) SetFake() {
	{
		{
			s.Created = float64(0)
		}
	}
	{
		{
			s.Initialized.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Provider) SetFake() {
	{
		{
			s.API.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Env = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Env = append(s.Env, elem)
			}
		}
	}
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.Npm.SetFake()
		}
	}
	{
		{
			s.Models.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ProviderAuthError) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ProviderAuthErrorData) SetFake() {
	{
		{
			s.ProviderID = "string"
		}
	}
	{
		{
			s.Message = "string"
		}
	}
}

// SetFake set fake values.
func (s *ProviderModels) SetFake() {
	var (
		elem Model
		m    map[string]Model = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *Range) SetFake() {
	{
		{
			s.Start.SetFake()
		}
	}
	{
		{
			s.End.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RangeEnd) SetFake() {
	{
		{
			s.Line = float64(0)
		}
	}
	{
		{
			s.Character = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *RangeStart) SetFake() {
	{
		{
			s.Line = float64(0)
		}
	}
	{
		{
			s.Character = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *ReasoningPart) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Text = "string"
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ReasoningPartMetadata) SetFake() {
	var (
		elem jx.Raw
		m    map[string]jx.Raw = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *ReasoningPartTime) SetFake() {
	{
		{
			s.Start = float64(0)
		}
	}
	{
		{
			s.End.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Session) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.ProjectID = "string"
		}
	}
	{
		{
			s.Directory = "string"
		}
	}
	{
		{
			s.ParentID.SetFake()
		}
	}
	{
		{
			s.Share.SetFake()
		}
	}
	{
		{
			s.Title = "string"
		}
	}
	{
		{
			s.Version = "string"
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
	{
		{
			s.Revert.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SessionCommandOK) SetFake() {
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Parts = nil
			for i := 0; i < 0; i++ {
				var elem Part
				{
					elem.SetFake()
				}
				s.Parts = append(s.Parts, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SessionCommandReq) SetFake() {
	{
		{
			s.MessageID.SetFake()
		}
	}
	{
		{
			s.Agent.SetFake()
		}
	}
	{
		{
			s.Model.SetFake()
		}
	}
	{
		{
			s.Arguments = "string"
		}
	}
	{
		{
			s.Command = "string"
		}
	}
}

// SetFake set fake values.
func (s *SessionCreateReq) SetFake() {
	{
		{
			s.ParentID.SetFake()
		}
	}
	{
		{
			s.Title.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SessionInitReq) SetFake() {
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.ProviderID = "string"
		}
	}
	{
		{
			s.ModelID = "string"
		}
	}
}

// SetFake set fake values.
func (s *SessionMessageOK) SetFake() {
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Parts = nil
			for i := 0; i < 0; i++ {
				var elem Part
				{
					elem.SetFake()
				}
				s.Parts = append(s.Parts, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SessionMessagesOKItem) SetFake() {
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Parts = nil
			for i := 0; i < 0; i++ {
				var elem Part
				{
					elem.SetFake()
				}
				s.Parts = append(s.Parts, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SessionPromptOK) SetFake() {
	{
		{
			s.Info.SetFake()
		}
	}
	{
		{
			s.Parts = nil
			for i := 0; i < 0; i++ {
				var elem Part
				{
					elem.SetFake()
				}
				s.Parts = append(s.Parts, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SessionPromptReq) SetFake() {
	{
		{
			s.MessageID.SetFake()
		}
	}
	{
		{
			s.Model.SetFake()
		}
	}
	{
		{
			s.Agent.SetFake()
		}
	}
	{
		{
			s.System.SetFake()
		}
	}
	{
		{
			s.Tools.SetFake()
		}
	}
	{
		{
			s.Parts = nil
			for i := 0; i < 0; i++ {
				var elem SessionPromptReqPartsItem
				{
					elem.SetFake()
				}
				s.Parts = append(s.Parts, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *SessionPromptReqModel) SetFake() {
	{
		{
			s.ProviderID = "string"
		}
	}
	{
		{
			s.ModelID = "string"
		}
	}
}

// SetFake set fake values.
func (s *SessionPromptReqPartsItem) SetFake() {
	var variant AgentPartInput

	{
		variant.SetFake()
	}
	s.SetAgentPartInput(variant)
}

// SetFake set fake values.
func (s *SessionPromptReqTools) SetFake() {
	var (
		elem bool
		m    map[string]bool = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *SessionRevert) SetFake() {
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.PartID.SetFake()
		}
	}
	{
		{
			s.Snapshot.SetFake()
		}
	}
	{
		{
			s.Diff.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SessionRevertReq) SetFake() {
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.PartID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SessionShare) SetFake() {
	{
		{
			s.URL = "string"
		}
	}
}

// SetFake set fake values.
func (s *SessionShellReq) SetFake() {
	{
		{
			s.Agent = "string"
		}
	}
	{
		{
			s.Command = "string"
		}
	}
}

// SetFake set fake values.
func (s *SessionSummarizeReq) SetFake() {
	{
		{
			s.ProviderID = "string"
		}
	}
	{
		{
			s.ModelID = "string"
		}
	}
}

// SetFake set fake values.
func (s *SessionTime) SetFake() {
	{
		{
			s.Created = float64(0)
		}
	}
	{
		{
			s.Updated = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *SessionUpdateReq) SetFake() {
	{
		{
			s.Title.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SnapshotPart) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Snapshot = "string"
		}
	}
}

// SetFake set fake values.
func (s *StepFinishPart) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Cost = float64(0)
		}
	}
	{
		{
			s.Tokens.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *StepFinishPartTokens) SetFake() {
	{
		{
			s.Input = float64(0)
		}
	}
	{
		{
			s.Output = float64(0)
		}
	}
	{
		{
			s.Reasoning = float64(0)
		}
	}
	{
		{
			s.Cache.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *StepFinishPartTokensCache) SetFake() {
	{
		{
			s.Read = float64(0)
		}
	}
	{
		{
			s.Write = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *StepStartPart) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
}

// SetFake set fake values.
func (s *Symbol) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Kind = float64(0)
		}
	}
	{
		{
			s.Location.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SymbolLocation) SetFake() {
	{
		{
			s.URI = "string"
		}
	}
	{
		{
			s.Range.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SymbolSource) SetFake() {
	{
		{
			s.Text.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Path = "string"
		}
	}
	{
		{
			s.Range.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Kind = int(0)
		}
	}
}

// SetFake set fake values.
func (s *TextPart) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Text = "string"
		}
	}
	{
		{
			s.Synthetic.SetFake()
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TextPartInput) SetFake() {
	{
		{
			s.ID.SetFake()
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Text = "string"
		}
	}
	{
		{
			s.Synthetic.SetFake()
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TextPartInputTime) SetFake() {
	{
		{
			s.Start = float64(0)
		}
	}
	{
		{
			s.End.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TextPartTime) SetFake() {
	{
		{
			s.Start = float64(0)
		}
	}
	{
		{
			s.End.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ToolPart) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.MessageID = "string"
		}
	}
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.CallID = "string"
		}
	}
	{
		{
			s.Tool = "string"
		}
	}
	{
		{
			s.State.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ToolState) SetFake() {
	var variant ToolStateCompleted

	{
		variant.SetFake()
	}
	s.SetToolStateCompleted(variant)
}

// SetFake set fake values.
func (s *ToolStateCompleted) SetFake() {
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Input.SetFake()
		}
	}
	{
		{
			s.Output = "string"
		}
	}
	{
		{
			s.Title = "string"
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ToolStateCompletedInput) SetFake() {
	var (
		elem jx.Raw
		m    map[string]jx.Raw = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *ToolStateCompletedMetadata) SetFake() {
	var (
		elem jx.Raw
		m    map[string]jx.Raw = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *ToolStateCompletedTime) SetFake() {
	{
		{
			s.Start = float64(0)
		}
	}
	{
		{
			s.End = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *ToolStateError) SetFake() {
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Input.SetFake()
		}
	}
	{
		{
			s.Error = "string"
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ToolStateErrorInput) SetFake() {
	var (
		elem jx.Raw
		m    map[string]jx.Raw = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *ToolStateErrorMetadata) SetFake() {
	var (
		elem jx.Raw
		m    map[string]jx.Raw = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *ToolStateErrorTime) SetFake() {
	{
		{
			s.Start = float64(0)
		}
	}
	{
		{
			s.End = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *ToolStatePending) SetFake() {
	{
		{
			s.Status = "string"
		}
	}
}

// SetFake set fake values.
func (s *ToolStateRunning) SetFake() {
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Input = []byte("null")
		}
	}
	{
		{
			s.Title.SetFake()
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ToolStateRunningMetadata) SetFake() {
	var (
		elem jx.Raw
		m    map[string]jx.Raw = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *ToolStateRunningTime) SetFake() {
	{
		{
			s.Start = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *TuiAppendPromptReq) SetFake() {
	{
		{
			s.Text = "string"
		}
	}
}

// SetFake set fake values.
func (s *TuiExecuteCommandReq) SetFake() {
	{
		{
			s.Command = "string"
		}
	}
}

// SetFake set fake values.
func (s *TuiShowToastReq) SetFake() {
	{
		{
			s.Title.SetFake()
		}
	}
	{
		{
			s.Message = "string"
		}
	}
	{
		{
			s.Variant.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TuiShowToastReqVariant) SetFake() {
	*s = TuiShowToastReqVariantInfo
}

// SetFake set fake values.
func (s *UnknownError) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UnknownErrorData) SetFake() {
	{
		{
			s.Message = "string"
		}
	}
}

// SetFake set fake values.
func (s *UserMessage) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.SessionID = "string"
		}
	}
	{
		{
			s.Role = "string"
		}
	}
	{
		{
			s.Time.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UserMessageTime) SetFake() {
	{
		{
			s.Created = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *WellKnownAuth) SetFake() {
	{
		{
			s.Type = "string"
		}
	}
	{
		{
			s.Key = "string"
		}
	}
	{
		{
			s.Token = "string"
		}
	}
}
